// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using XInsuranceCompany.Data.Contexts;

namespace XInsuranceCompany.Data.Migrations
{
    [DbContext(typeof(XInsuranceCompanyDbContext))]
    [Migration("20211203130337_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("XInsuranceCompany.Core.Entities.Insurance.CarInsuranceOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("IdentificationNumber")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("LicenseSerialCode")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("LicenseSerialNumber")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Plate")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("CarInsuranceOffers");
                });

            modelBuilder.Entity("XInsuranceCompany.Core.Entities.Insurance.CarInsuranceOfferDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarInsuranceOfferId")
                        .HasColumnType("int");

                    b.Property<string>("InsuranceCompanyLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsuranceCompanyName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("OfferDescription")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal>("OfferPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CarInsuranceOfferId");

                    b.ToTable("CarInsuranceOfferDetails");
                });

            modelBuilder.Entity("XInsuranceCompany.Core.Entities.Insurance.CarInsuranceOfferDetail", b =>
                {
                    b.HasOne("XInsuranceCompany.Core.Entities.Insurance.CarInsuranceOffer", "CarInsuranceOffer")
                        .WithMany("CarInsuranceOfferDetails")
                        .HasForeignKey("CarInsuranceOfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarInsuranceOffer");
                });

            modelBuilder.Entity("XInsuranceCompany.Core.Entities.Insurance.CarInsuranceOffer", b =>
                {
                    b.Navigation("CarInsuranceOfferDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
